<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kanban To-Do List</title>
    <link rel="stylesheet" href="/styles.css">
</head>
<body>
    <div class="container">
        <h1>Kanban To-Do List</h1>

        <!-- Form to add tasks -->
        <form action="/add" method="POST">
            <input type="text" name="description" placeholder="New task" required>
            <select name="priority">
                <option value="high">High</option>
                <option value="medium">Medium</option>
                <option value="low">Low</option>
            </select>
            <button type="submit">Add</button>
        </form>

        <!-- Kanban columns -->
        <div class="kanban-board">
            <div class="column" id="todo-column">
                <h2>To Do</h2>
                <ul class="task-list" data-status="todo">
                    <% tasks.filter(task => task.status === 'todo').forEach(task => { %>
                        <li 
                            class="task-item" 
                            data-task-id="<%= task._id %>" 
                            draggable="true"
                        >
                            <div class="task-info">
                                <span><%= task.description %></span>
                                <div class="task-priority <%= task.priority %>">
                                    <%= task.priority %>
                                </div>
                            </div>
                            <div class="task-actions">
                                <button 
                                    class="complete" 
                                    onclick="updateStatus('<%= task._id %>', 'done')"
                                >
                                    Done
                                </button>
                                <button 
                                    class="delete" 
                                    onclick="deleteTask('<%= task._id %>')"
                                >
                                    Delete
                                </button>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            </div>

            <div class="column" id="doing-column">
                <h2>Doing</h2>
                <ul class="task-list" data-status="doing">
                    <% tasks.filter(task => task.status === 'doing').forEach(task => { %>
                        <li 
                            class="task-item" 
                            data-task-id="<%= task._id %>" 
                            draggable="true"
                        >
                            <div class="task-info">
                                <span><%= task.description %></span>
                                <div class="task-priority <%= task.priority %>">
                                    <%= task.priority %>
                                </div>
                            </div>
                            <div class="task-actions">
                                <button 
                                    class="complete" 
                                    onclick="updateStatus('<%= task._id %>', 'done')"
                                >
                                    Done
                                </button>
                                <button 
                                    class="delete" 
                                    onclick="deleteTask('<%= task._id %>')"
                                >
                                    Delete
                                </button>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            </div>

            <div class="column" id="done-column">
                <h2>Done</h2>
                <ul class="task-list" data-status="done">
                    <% tasks.filter(task => task.status === 'done').forEach(task => { %>
                        <li 
                            class="task-item" 
                            data-task-id="<%= task._id %>" 
                            draggable="true"
                        >
                            <div class="task-info">
                                <span><%= task.description %></span>
                                <div class="task-priority <%= task.priority %>">
                                    <%= task.priority %>
                                </div>
                            </div>
                            <div class="task-actions">
                                <button 
                                    class="undo" 
                                    onclick="updateStatus('<%= task._id %>', 'todo')"
                                >
                                    Undo
                                </button>
                                <button 
                                    class="delete" 
                                    onclick="deleteTask('<%= task._id %>')"
                                >
                                    Delete
                                </button>
                            </div>
                        </li>
                    <% }) %>
                </ul>
            </div>
        </div>
    </div>

    <!-- Script for drag and drop and updates -->
    <script>
        // Update task status Function
        async function updateStatus(taskId, status) {
            try {
                const response = await fetch(`/update-status/${taskId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ status })  
                });

                if (response.ok) {
                    console.log('Task status updated successfully');
                } else {
                    console.error('Failed to update task status');
                }
            } catch (error) {
                console.error('Error updating task status:', error);
            }
        }

        // Delete task Function
        async function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                try {
                    const response = await fetch(`/delete/${taskId}`, {
                        method: 'POST',
                    });

                    if (response.ok) {
                        location.reload();  
                    } else {
                        console.error('Failed to delete task');
                    }
                } catch (error) {
                    console.error('Error deleting task:', error);
                }
            }
        }

        // Drag and drop
        const columns = document.querySelectorAll('.column');
    
            columns.forEach(column => {
                column.addEventListener('dragover', (e) => {
                    e.preventDefault();
                    const draggingItem = document.querySelector('.dragging');
                    if (draggingItem) {
                        column.querySelector('.task-list').appendChild(draggingItem); 
                    }
                });
                
                column.addEventListener('drop', (e) => {
                    e.preventDefault();
                    const draggingItem = document.querySelector('.dragging');
                    if (draggingItem) {
                        const newStatus = column.querySelector('.task-list').dataset.status;
                        const taskId = draggingItem.dataset.taskId;

                        updateStatus(taskId, newStatus);
                    }
                });
            });

            const taskItems = document.querySelectorAll('.task-item');

            taskItems.forEach(item => {
                item.addEventListener('dragstart', () => {
                    item.classList.add('dragging'); 
                });

                item.addEventListener('dragend', () => {
                    item.classList.remove('dragging');  
                });
            });
    </script>
</body>
</html>